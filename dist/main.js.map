{"version":3,"sources":["page/prime.model.ts","main.ts"],"names":[],"mappings":";AACa,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAb,IAAA,EAAA,WAII,SAAA,IAHQ,KAAA,MAAgB,EAChB,KAAA,SAAqB,GACrB,KAAA,GAAU,6EAET,KAAA,WACA,KAAA,kBACA,KAAA,QAuCb,OApCI,EAAA,UAAA,gBAAA,WACS,IAAA,IAAI,EAAI,EAAG,GAAK,KAAK,MAAO,IAAK,CAE7B,IADD,IAAA,GAAsB,EACjB,EAAI,EAAG,GAAM,EAAI,EAAI,IACtB,GAAA,EAAI,GAAM,EAAG,CACb,GAAa,EACb,MAGU,GAAd,GACK,KAAA,SAAS,KAAK,KAI/B,EAAA,UAAA,MAAA,WAAS,EAAE,eAAe,GAAG,QAAS,WAClC,EAAE,oBAAoB,WAE1B,EAAA,UAAA,SAAA,WAAA,IAAA,EAAA,KACQ,EAAQ,KACZ,EAAE,aAAa,GAAG,QAAS,WACnB,IAAA,EAAW,EAAE,kBAAkB,MACnC,EAAK,MAAQ,SAAS,GACtB,EAAM,kBACN,EAAM,qBAId,EAAA,UAAA,gBAAA,WAAA,IAAA,EAAA,KACQ,EAAa,EAAE,oBACnB,EAAE,oBAAoB,WAAW,SAC5B,KAAA,SAAS,IAAI,SAAA,GACd,EAAE,EAAK,IAAI,QAAQ,SAAS,GAAY,KAAK,MAKzD,EA9CA,GAAa,QAAA,WAAA;;ACEb,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAFA,IAAA,EAAA,QAAA,sBACI,EAAI,IAAI,EAAA,WACZ,QAAQ,IAAI,EAAE","file":"main.js","sourceRoot":"../code","sourcesContent":["\nexport class PrimeModel {\n    private total: number = 0;\n    private primeArr: number[] = [];\n    private el: any = `  <button type=\"button\" class=\"btn btn-outline-secondary btn-sm\"></button>`\n    constructor() {\n        this.getInput();\n        this.getPrimeNumbers();\n        this.clean();\n\n    }\n    getPrimeNumbers() {\n        for (let i = 2; i <= this.total; i++) {\n            let isNotPrime: boolean = false;\n            for (let j = 2; j <= (i - 1); j++) {\n                if (i % j === 0) {\n                    isNotPrime = true\n                    break;\n                }\n            }\n            if (isNotPrime == false) {\n                this.primeArr.push(i);\n            }\n        }\n    };\n    clean(){ $(\"#primeClean\").on('click', () => {\n        $('#prime-container').empty();\n    })}\n    getInput() {\n        let _that = this;\n        $(\"#primeBtn\").on('click', () => {\n            let num: any = $('#primeBtnInput').val()\n            this.total = parseInt(num);\n            _that.getPrimeNumbers();\n            _that.createContainer();\n\n        })\n    };\n    createContainer() {\n        let $container = $('#prime-container');\n        $('#prime-container').children().remove();\n        this.primeArr.map(item => {\n            $(this.el).clone().appendTo($container).text(item);\n        })\n\n    };\n\n}\n\n","import prime  from './array/prime';\nimport {PrimeModel} from './page/prime.model'\nlet p = new PrimeModel();\nconsole.log(p.getPrimeNumbers())\n\n"]}